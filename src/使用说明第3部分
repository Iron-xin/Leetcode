5.27（之前做完了树简单题，现在开始做几天字符串的简单题）
1.剑指offer----------面试题58 - II. 左旋转字符串
        (用StringBuilder比直接拼接字符串快)（记录了多种方法的）
2.Leetcode----------1108. IP 地址无效化
                            (就是一个替换操作)
3.Leetcode----------1436. 旅行终点站
                            （目的地不出现来出发地的时候，此时的目的地就是重点）
4.Leetcode----------1221. 分割平衡字符串
                                (自己做出来了哦)
5.Leetcode----------709. 转换成小写字母   (小写字符的数字更大 大32)
                            （本题涉及Ascii码的大小写）（两个写法，遍历方式不同）
6.Leetcode----------804. 唯一摩尔斯密码词
                                （就是看翻译之后有多少种方式，  给定n个单词，翻译出来的结果少于n个）
                            (这里都是小写，所以减去a即可)(或者减32)
7.Leetcode----------1309. 解码字母到整数映射
                                （题目不算难，码表的转换是否加强后续看题频吧）
8.Leetcode----------657. 机器人能否返回原点
                                (就是上和下相等，左和右相等)
9.Leetcode----------1370. 上升下降字符串
                       （用桶排序就容易理解，26个桶，每个桶统计出现的次数，每添加一个字符，对应桶就减一）
10.Leetcode----------1374. 生成每种字符都是奇数个的字符串

-----------------------------------------------------------------------------------------------
5.28
1.Leetcode----------557. 反转字符串中的单词 III (剑指offer上58.1类似)（腾讯面试过）
                     （两个思路，1.利用栈，碰到空格，就弹出顺序添加到string中
                     2.利用双指针，碰见空格后，从后向前添加）
                      （这里记录第2种）(自己写出来了，妈的)（当然方法1中的也可以用交换的方法来做）
2.Leetcode----------344. 反转字符串
                            （就首位反转啊）
3.Leetcode----------893. 特殊等价字符串组
                            （题目晦涩难懂，跳过了，可能简单吧，但是题目不好看懂）
4.Leetcode----------521. 最长特殊序列 Ⅰ
                                    （这种题目没有什么意义）
5.面试金典----------面试题 01.02. 判定是否互为字符重排
                            （本题考点应该在于桶排序，记录每个字符出现的次数，相同则可以重排）
6.Leetcode----------929. 独特的电子邮件地址
                             (本题刚开始想的是，遍历，然后存hashmap，碰到+就跳过，然后map中记录次数。
                             后来发现其实set就行，并且学习别人的思路，字符串还得多看别人怎么写的)
                                （记录两种写法，有点东西的）（split分割，substring 从某个索引往后截取）
7.Leetcode----------1455. 检查单词是否为句中其他单词的前缀
                                （常规思路，三个指针比较，两个指向句子单词收尾，一个指向要比较的前缀
                                非常规思路，调用各种函数。）（本题题解和评论较少，因此常规笨方法就不实现了）
                            这题不就是项目中的前缀树的题吗。还是只用比较1个的没符号的简单版本

                            妈的 我是真的强，搞了几个小时，1455搞出来了。
                            过几天再来看，补上注释
8.Leetcode----------1189. “气球” 的最大数量
                        (桶排序的思想，记录次数，然后比较最小值)
9.Leetcode----------1332. 删除回文子序列
                            （妈的，这是道脑筋急转弯，不用看了）
10.Leetcode----------13. 罗马数字转整数
                                （主要是要找出几个特殊情况）
-----------------------------------------------------------------------------------------------
5.29
1.Leetcode----------1170. 比较字符串最小字母出现频次
                                （思路其实有，就是统计和比较，但是本题暂时放弃，根据题频）
2.Leetcode----------788. 旋转数字
                                （记录了一种比较巧的思想，没有那么多的讨论,但是分类分的很巧）
                                   （包含其他字符的都是false，只要包含了一个指定字符的，就是正确的字符）
3.Leetcode----------824. 山羊拉丁文
                       （先记录一种用split分割的方法吧。值得一看，然后后续看题频了，这题也是个有空格啊，单
                          词计数的题，参考我自己写1455的代码。）
4.Leetcode----------1408数组中的字符串匹配
                        （跳过了,不是一遍就能会的题，如果使用API很简单）（不太可能出现，出现了也是个不会）
5.Leetcode----------1071. 字符串的最大公因子
                          （求最大公因子，辗转相除）（这题也不太可能出现在面试和笔试中，因此只记录一个写法）
6.Leetcode----------1446. 连续字符
                                （快慢指针）（自己纯手打了）
7.面试金典----------面试题 01.03. URL化 （剑指offer上也有，属于重点题）
                        (记录两个方法，1.stringbuilder 2.直接在字符串数组上改，因此最好是逆序来，从后往前)
8.Leetcode----------937. 重新排列日志文件
                                （题目比较绕，且不简单，直接跳过了）
9.Leetcode----------38. 外观数列
                            （双指针递归的方法，或者用循环写也可以，还可以吧这题，值得一做）
10.Leetcode----------520. 检测大写字母
                                (第一种抄的，第二种我自己写的)
-----------------------------------------------------------------------------------------------
5.30
1.Leetcode----------917. 仅仅反转字母
                          (逻辑就是双指针交换，跳过非字母符号)
                          （一定要注意，逻辑怎么写的，小写字母码更多）（2个方法）
2.面试金典----------面试题 01.09. 字符串轮转
                            （很明显，逐位比较，然后另起一头再比较，如果两个都到尾部，则成功）
                            (实际上也是用kmp算法比较合适，但不会写啊，所以就用到了api)
                        （利用一种巧劲，比如，ab和ba，但是，abab中一定包含了ba）（提供2个思路，但只记录巧劲）
3.Leetcode----------541. 反转字符串 II
                            (记录一种笨方法，但是很直观的)
4.Leetcode 606 在树的简答题部分刷过了，再复习一遍

5.面试金典----------面试题 01.04. 回文排列
                      （桶计数，只允许一个字符的个数是奇数）（自己写了一个，再记录一个set的，set消消乐）
                            一共2个）
6.Leetcode----------383. 赎金信
                          （桶计数，可以开辟一个数组，也可以开辟两个。还可以排序后双指针。但这里只记录数组）
                          （数组就是hash了。一个道理）
7.Leetcode----------67. 二进制求和
                            （做的人很多，但是非科班不太容易理解，难顶哦，记录一个能看懂的）
8.Leetcode----------1422. 分割字符串的最大得分
                            （本来是三遍扫描，但是在第二遍和第三遍可以合并起来处理）
                            （一定要注意边界，是j和j-1的相加）
9.Leetcode----------696. 计数二进制子串
                                （指针不断后移的更新）(思路没有理清，直接看的代码，选的这个代码思路就是对我胃口的)
10.Leetcode----------551. 学生出勤记录 I
                            （边界条件放前面）
11.Leetcode----------1417. 重新格式化字符串
                            我想复杂了，想用多个数组，然后添加一个数量减少一个。其实一个字符数组，一个数字数组就可以了。
       两次遍历就可形成，然后用两个指针指着来就行。 （大佬们都是用一个数组，前半部分放字母，后面放数字，但是要排序）
      （但是本题其实也是可以用数组内部不断交换来判断的，c语言的同学都是交换的，所以本题不做重点，记录一种写法即可，后续看需求）
12.Leetcode----------415. 字符串相加
                            用一个数来记录进位，和67的代码中的非常像，改动两行就出来了。 这里记录两个方法吧
                               建议使用第一个方法的写法，第二个方法的边界不太容易想到，最后一次进位仍然进入了循环。
-----------------------------------------------------------------------------------------------
5.31
1.Leetcode----------345. 反转字符串中的元音字母
                        (双指针的移动，一定要自己写，注意边界)  记录两个写法
2.面试金典----------面试题 01.06. 字符串压缩
                            （双指针，同样是看边界，思想很简单）(自己纯手敲了)
3.Leetcode----------459. 重复的子字符串
            子序列：一个给定的序列的子序列是在该序列中删除若干元素后得到的序列；
            子串：字符串中任意个连续的字符组成的子序列称为该串的子串。
                    （又是一题可以利用s1+s2的题，和面试题0109异曲同工之妙）(再记录一种普通方法，更加对面试官的胃口的)
                    (substring有坑，本题慎重使用，调了半天出不来，纯暴力是O(n^3))
4.Leetcode----------387. 字符串中的第一个唯一字符
                            （剑指offer上也有本题原题）(记录两个方法，也注意和博客上的进行对比)(第2种方法是自己敲的)
5.Leetcode----------125. 验证回文串
                            (自己敲出来的)
-----------------------------------------------------------------------------------------------
6.1
1.Leetcode----------20. 有效的括号
                        （在第一部分刷过，这里复习一下）
2.剑指offer----------面试题58 - I. 翻转单词顺序
                            (记录两个方法，1是纯api 2.比较笨重的写法也是正常做法，将字符收尾空格去掉，手写
                            然后遇到空格跳，先翻转一次，然后再翻转具体的单词，去看牛客的博客吧，
                            但是力扣上的运行中间多个空格,所以力扣的版本中，不能在原数组中操作
                            所以我的solution2是不能正常运行的)（和力扣151一样）
3.Leetcode----------443. 压缩字符串
                            (没弄太明白，和面试题0106还是有点不同，先跳过吧)
4.Leetcode----------28. 实现 strStr()
                                （KMP算法 但手写的话，还是算了吧，或者就用substring）
这里做一个总结：低于40%的通过率，即使是简单题，也不简单了。
因此字符串的简单题，到这里也结束了。

第二个总结是：
这里的感受是，如果字符串的题可以比较复杂，就看你写的时候会不会调用API。而基础的写法就是逐位比较，然后处理。
因此，在笔试中，树和字符串大概率是只在面试中问到，因此这里作为字符串和树的简单题的结束。
    接下来就是进行图（深度广度回溯），动态规划，贪心。  其他的种类再往后靠一点，因为分类种类太多。










